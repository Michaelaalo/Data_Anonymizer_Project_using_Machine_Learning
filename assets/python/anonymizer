import pandas as pd
from presidio_analyzer import AnalyzerEngine
from presidio_analyzer.nlp_engine import NlpEngineProvider
from presidio_anonymizer import AnonymizerEngine
from presidio_anonymizer.entities import OperatorConfig

# Load spaCy model
import spacy
nlp = spacy.load("en_core_web_lg")

# Configure the NLP engine with spaCy
nlp_engine_provider = NlpEngineProvider(nlp_configuration={
    "nlp_engine_name": "spacy",
    "models": [{"lang_code": "en", "model_name": "en_core_web_lg"}]
})
nlp_engine = nlp_engine_provider.create_engine()

# Initialize Presidio Analyzer and Anonymizer with the spaCy NLP engine
analyzer = AnalyzerEngine(nlp_engine=nlp_engine)
anonymizer = AnonymizerEngine()

# Load the dataset
df = pd.read_csv('Customer Review.csv', encoding='ISO-8859-1')
print(df.head())

# Function to identify PII in text
def identify_pii(text):
    results = analyzer.analyze(text=text, language='en')
    return results

# Function to anonymize PII in text
def anonymize_text(text, results):
    anonymized_text = anonymizer.anonymize(
        text=text,
        analyzer_results=results,
        operators={'DEFAULT': OperatorConfig(operator_name='replace', params={'new_value': 'ANONYMISED'})}
    )
    return anonymized_text

# Anonymize the 'Customer name' column
def anonymize_column(column):
    anonymized_data = []
    for text in column:
        results = identify_pii(text)
        anonymized_result = anonymize_text(text, results)
        anonymized_data.append(anonymized_result.text)
    return anonymized_data

# Apply anonymization to the 'Customer name' column
df['AnonymizedCustomerName'] = anonymize_column(df['Customer name'])
print(df[['Customer name', 'AnonymizedCustomerName']].head())

# Save the anonymized dataset to a new CSV file
df.to_csv('anonymized_customer_reviews.csv', index=False)
